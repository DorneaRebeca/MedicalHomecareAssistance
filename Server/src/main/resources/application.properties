#spring.rabbitmq.host = localhost
#spring.rabbitmq.port = 5672
#spring.rabbitmq.username = guest
#spring.rabbitmq.password = guest
#rabbitmq.queue = MyRabbitQueue2
#rabbitmq.exchange = Rabbit.In2
#rabbitmq.routingkey = MY_ROUTING_KEY2

spring.rabbitmq.host = rabbitmq
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest
rabbitmq.queue = MyRabbitQueue2
rabbitmq.exchange = Rabbit.In2
rabbitmq.routingkey = MY_ROUTING_KEY2

spring.main.allow-bean-definition-overriding=true



###############################################
### APPLICATION CONNECTIVITY CONFIGURATIONS ###
###############################################

server.ssl.enabled=true
server.ssl.key-store=classpath:rebeca.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=rebeca
server.ssl.key-password=rebeca

spring.datasource.url = jdbc:mysql://dornea-sql:3306/ehealth?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username = dockeruser
spring.datasource.password = password

##
database.ip = ${MYSQL_IP:localhost}
database.port = ${MYSQL_PORT:3306}
database.person = ${MYSQL_USER:root}
database.password = ${MYSQL_PASSWORD:floricica}
database.name = ${MYSQL_DBNAME:ehealth}
#

#############################################
### SPRING CONFIGURATIONS FOR THE DATABASE ###
##############################################
# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://${database.ip}:${database.port}/${database.name}?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username = ${database.person}
#spring.datasource.password = ${database.password}

# Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true


# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = validate

# Sql queries logging
logging.level.org.hibernate.SQL=DEBUG

server.port=8080

grpc.port=8081

